{"version":3,"names":[],"mappings":"","sources":["service/fastbill.js"],"sourcesContent":["(function () {\n    'use strict';\n\n    var angular = require('angular'),\n        Customer = require('../model/customer'),\n        FastBill = function ($q, $rootScope, $log) {\n            this.client = require('fastbill-client');\n            this.$q = $q;\n            this.$rootScope = $rootScope;\n            this.$log = $log;\n            this.authenticated = false;\n            this.initialize();\n        };\n\n    FastBill.prototype.initialize = function () {\n        // check local storage\n        this.restoreState();\n    };\n\n    FastBill.prototype.restoreState = function () {\n        var self = this,\n            serialized,\n            credentials;\n\n        try {\n            serialized = localStorage._credentials;\n\n            if (serialized) {\n                this.deferred = this.$q.defer();\n                credentials = angular.fromJson(serialized);\n                // try to login\n                this.login(credentials.username, credentials.apiKey)\n                    .then(function () {\n                        self.deferred.resolve(true);\n                        self.deferred = null;\n                    }, function () {\n                        self.deferred.resolve(false);\n                    });\n            }\n        } catch (e) {\n            this.$log.warn('[FastBill] error restoring state:', e);\n        }\n    };\n\n    FastBill.prototype.saveState = function () {\n        try {\n            localStorage._credentials = angular.toJson(this.credentials);\n        } catch (e) {\n            this.$log.warn('[FastBill] error saving state:', e);\n        }\n    };\n\n    FastBill.prototype.login = function (username, apiKey) {\n        var deferred = this.$q.defer(),\n            self = this;\n        this.client.bootstrap(username, apiKey);\n\n        this.client.api.customer.get().then(function () {\n            self.$log.debug('[FastBill] login success');\n            self.authenticated = true;\n            self.credentials = {\n                username: username,\n                apiKey: apiKey\n            };\n            self.saveState();\n            self.$rootScope.$broadcast('authenticated');\n            deferred.resolve();\n        }, function (data) {\n            self.$log.warn('[FastBill] login failed', data);\n            self.$rootScope.$broadcast('not-authenticated');\n            deferred.reject();\n        });\n\n        return deferred.promise;\n    };\n\n    FastBill.prototype.getCustomers = function () {\n        return this.client.api.customer.get().then(function (data) {\n            var customers = [];\n\n            data.forEach(function (c) {\n                customers.push(new Customer(c));\n            });\n\n            return customers;\n        });\n    };\n\n    FastBill.prototype.getCustomer = function (id) {\n        return this.client.api.customer.getById(id).then(function (data) {\n            if (data && data.length) {\n                return new Customer(data[0]);\n            }\n\n            return null;\n        });\n    };\n\n    FastBill.prototype.isAuthenticated = function () {\n        if (this.deferred) {\n            return this.deferred.promise;\n        }\n\n        var deferred = this.$q.defer();\n\n        deferred.resolve(this.authenticated);\n\n        return deferred.promise;\n    };\n\n    FastBill.prototype.getInvoices = function (customerId) {\n        var Invoice = require('../model/invoice'),\n            invoicesHandler = function (data) {\n                var invoices = [];\n\n                data.forEach(function (i) {\n                    invoices.push(new Invoice(i));\n                });\n\n                return invoices;\n            };\n\n        if (customerId) {\n            return this.client.api.invoice.getByCustomerId(customerId).then(invoicesHandler);\n        } else {\n            return this.client.api.invoice.get().then(invoicesHandler);\n        }\n    };\n\n    FastBill.prototype.getProjects = function (customerId) {\n        var Project = require('../model/project'),\n            projectsHandler = function (data) {\n                var projects = [];\n\n                data.forEach(function (p) {\n                    projects.push(new Project(p));\n                });\n\n                return projects;\n            };\n\n        if (customerId) {\n            return this.client.api.project.getByCustomerId(customerId).then(projectsHandler);\n        }\n\n        return this.client.api.project.get().then(projectsHandler);\n    };\n\n    module.exports = ['$q', '$rootScope', '$log', function ($q, $rootScope, $log) {\n        return new FastBill($q, $rootScope, $log);\n    }];\n}());\n"],"file":"service/fastbill.js","sourceRoot":"/source/"}