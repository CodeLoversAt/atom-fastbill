{"version":3,"names":[],"mappings":"","sources":["controller/customerInvoices.js"],"sourcesContent":["(function () {\n    'use strict';\n    module.exports = ['$scope', '$log', 'FastBill', '$filter', '$timeout', 'uiGridConstants', function ($scope, $log, FastBill, $filter, $timeout, uiGridConstants) {\n        $scope.$watch('customer', function (customer) {\n            if (!customer) {\n                return;\n            }\n\n            FastBill.getInvoices(customer.id).then(function (invoices) {\n                $scope.$apply(function () {\n                    $scope.invoices = invoices;\n                });\n            });\n        });\n\n        $scope.gridOptions = {\n            data: 'invoicesData',\n            onRegisterApi: function (gridApi) {\n                $scope.gridApi = gridApi;\n            },\n            enableRowSelection: true,\n            enableSelectAll: true,\n            selectionRowHeaderWidth: 35,\n            rowHeight: 35,\n            showGridFooter:true,\n            columnDefs: [\n                {\n                    field: 'state',\n                    displayName: $filter('translate')('INVOICE.STATE.LABEL')\n                },\n                {\n                    field: 'number',\n                    sort: {\n                        direction: uiGridConstants.DESC,\n                        priority: 1\n                    },\n                    displayName: $filter('translate')('INVOICE.NUMBER')\n                },\n                {\n                    field: 'date',\n                    displayName: $filter('translate')('INVOICE.DATE')\n                },\n                {\n                    field: 'client',\n                    enableSorting: false,\n                    displayName: $filter('translate')('INVOICE.CLIENT')\n                },\n                {\n                    field: 'total',\n                    displayName: $filter('translate')('INVOICE.TOTAL')\n                }\n            ]\n        };\n\n        $scope.$watch('invoices', function (invoices) {\n            if (!invoices) {\n                return;\n            }\n\n            $scope.invoicesData = [];\n\n            invoices.forEach(function (invoice) {\n                var state;\n\n                if (invoice.isPaid()) {\n                    state = $filter('translate')('INVOICE.STATE.PAID');\n                } else if (invoice.isOverDue()) {\n                    state = $filter('translate')('INVOICE.STATE.OVERDUE');\n                } else {\n                    state = $filter('translate')('INVOICE.STATE.UNPAID');\n                }\n\n                $scope.invoicesData.push({\n                    state: state,\n                    number: invoice.number,\n                    client: invoice.client,\n                    total: $filter('number')(invoice.total),\n                    date: invoice.invoiceDate.format('L')\n                });\n            });\n\n            $log.debug('[CustomerInvoicesCtrl] invoicesData', $scope.invoicesData);\n\n            $timeout(function () {\n                $scope.gridApi.core.handleWindowResize();\n            });\n        });\n    }];\n}());\n"],"file":"controller/customerInvoices.js","sourceRoot":"/source/"}