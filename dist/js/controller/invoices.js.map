{"version":3,"names":[],"mappings":"","sources":["controller/invoices.js"],"sourcesContent":["(function () {\n    'use strict';\n\n    var angular = require('angular');\n\n    module.exports = ['$scope', '$log', 'FastBill', '$filter', '$timeout', 'uiGridConstants', '$state', function ($scope, $log, FastBill, $filter, $timeout, uiGridConstants, $state) {\n        function invoicesLoaded (invoices) {\n            $scope.$apply(function () {\n                $scope.invoices = invoices;\n            });\n        }\n        if ($state.params.customerId) {\n            FastBill.getInvoices($state.params.customerId).then(invoicesLoaded);\n        } else {\n            FastBill.getInvoices().then(invoicesLoaded);\n        }\n\n        $scope.gridOptions = {\n            data: 'invoicesData',\n            onRegisterApi: function (gridApi) {\n                $scope.gridApi = gridApi;\n            },\n            enableRowSelection: true,\n            enableSelectAll: true,\n            selectionRowHeaderWidth: 35,\n            rowHeight: 35,\n            showGridFooter:true,\n            columnDefs: [\n                {\n                    field: 'state',\n                    displayName: $filter('translate')('INVOICE.STATE.LABEL')\n                },\n                {\n                    field: 'number',\n                    sort: {\n                        direction: uiGridConstants.DESC,\n                        priority: 1\n                    },\n                    displayName: $filter('translate')('INVOICE.NUMBER')\n                },\n                {\n                    field: 'date',\n                    displayName: $filter('translate')('INVOICE.DATE')\n                },\n                {\n                    field: 'client',\n                    enableSorting: false,\n                    displayName: $filter('translate')('INVOICE.CLIENT')\n                },\n                {\n                    field: 'total',\n                    displayName: $filter('translate')('INVOICE.TOTAL')\n                },\n                {\n                    field: 'url',\n                    displayName: $filter('translate')('INVOICE.DOWNLOAD'),\n                    cellTemplate: '<a ng-click=\"grid.appScope.downloadInvoice(row.entity.url, row.entity.fileName)\" class=\"btn btn-link\" translate=\"INVOICE.DOWNLOAD\"></a>'\n                }\n            ]\n        };\n\n        $scope.downloadInvoice = function (url, fileName) {\n            var input = document.getElementById('fileDialog'),\n                remote = require('remote'),\n                fs = remote.require('fs'),\n                suffixNumber = 1;\n\n            function checkFile(folder, file) {\n                fs.exists(folder + '/' + file, function (exists) {\n                    var request, tmp;\n                    if (exists) {\n                        tmp = fileName.replace(/\\.pdf$/, ' (' + suffixNumber + ').pdf');\n                        suffixNumber++;\n                        checkFile(folder, tmp);\n                    } else {\n                        request = remote.require('request');\n                        request(url).pipe(fs.createWriteStream(folder + '/' + file));\n                    }\n                });\n            }\n\n            function onChange(event) {\n                $log.debug('onChange', event);\n                if (input.files && input.files.length) {\n                    input.removeEventListener('change', onChange);\n\n                    checkFile(input.files[0].path, fileName);\n                    input.files.length = 0;\n                }\n            }\n\n            input.addEventListener('change', onChange);\n            input.click();\n        };\n\n        $scope.$watch('invoices', function (invoices) {\n            if (!invoices) {\n                return;\n            }\n\n            $scope.invoicesData = [];\n\n            invoices.forEach(function (invoice) {\n                var state;\n\n                if (invoice.isPaid()) {\n                    state = $filter('translate')('INVOICE.STATE.PAID');\n                } else if (invoice.isOverDue()) {\n                    state = $filter('translate')('INVOICE.STATE.OVERDUE');\n                } else {\n                    state = $filter('translate')('INVOICE.STATE.UNPAID');\n                }\n\n                $scope.invoicesData.push({\n                    state: state,\n                    number: invoice.number,\n                    client: invoice.client,\n                    total: $filter('number')(invoice.total),\n                    date: invoice.invoiceDate.format('L'),\n                    url: invoice.url,\n                    fileName: $filter('translate')('INVOICE.FILE_NAME') + invoice.number + '.pdf'\n                });\n            });\n\n            $log.debug('[CustomerInvoicesCtrl] invoicesData', $scope.invoicesData);\n        });\n    }];\n}());\n"],"file":"controller/invoices.js","sourceRoot":"/source/"}