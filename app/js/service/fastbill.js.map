{"version":3,"sources":["service/fastbill.js"],"names":["angular","require","Customer","FastBill","$q","$rootScope","$log","this","client","authenticated","initialize","prototype","restoreState","serialized","credentials","self","localStorage","_credentials","deferred","defer","fromJson","login","username","apiKey","then","resolve","e","warn","saveState","toJson","clearState","ensureAuthenticated","bootstrap","api","customer","get","debug","$broadcast","data","reject","promise","getCustomers","customers","forEach","c","push","getCustomer","id","getById","length","isAuthenticated","getInvoices","customerId","Invoice","invoicesHandler","invoices","i","invoice","getByCustomerId","getProjects","Project","projectsHandler","projects","p","project","logout","module","exports"],"mappings":"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","file":"service/fastbill.js","sourcesContent":["(function () {\n    'use strict';\n\n    var angular = require('angular'),\n        Customer = require('../model/customer'),\n        FastBill = function ($q, $rootScope, $log) {\n            this.client = require('fastbill-client');\n            this.$q = $q;\n            this.$rootScope = $rootScope;\n            this.$log = $log;\n            this.authenticated = false;\n            this.initialize();\n        };\n\n    FastBill.prototype.initialize = function () {\n        // check local storage\n        this.restoreState();\n    };\n\n    FastBill.prototype.restoreState = function () {\n        var self = this,\n            serialized,\n            credentials;\n\n        try {\n            serialized = localStorage._credentials;\n\n            if (serialized) {\n                this.deferred = this.$q.defer();\n                credentials = angular.fromJson(serialized);\n                // try to login\n                this.login(credentials.username, credentials.apiKey)\n                    .then(function () {\n                        self.deferred.resolve(true);\n                        self.deferred = null;\n                    }, function () {\n                        self.deferred.resolve(false);\n                    });\n            }\n        } catch (e) {\n            this.$log.warn('[FastBill] error restoring state:', e);\n        }\n    };\n\n    FastBill.prototype.saveState = function () {\n        try {\n            localStorage._credentials = angular.toJson(this.credentials);\n        } catch (e) {\n            this.$log.warn('[FastBill] error saving state:', e);\n        }\n    };\n\n    FastBill.prototype.clearState = function () {\n        try {\n            delete localStorage._credentials;\n        } catch (e) {\n            this.$log.warn('[FastBill] error clearing state:', e);\n        }\n    };\n\n    FastBill.prototype.ensureAuthenticated = function () {\n        if (!this.authenticated) {\n            throw 'You need to call login before accessing any api method';\n        }\n    };\n\n    FastBill.prototype.login = function (username, apiKey) {\n        var deferred = this.$q.defer(),\n            self = this;\n        this.client.bootstrap(username, apiKey);\n\n        this.client.api.customer.get().then(function () {\n            self.$log.debug('[FastBill] login success');\n            self.authenticated = true;\n            self.credentials = {\n                username: username,\n                apiKey: apiKey\n            };\n            self.saveState();\n            self.$rootScope.$broadcast('authenticated');\n            deferred.resolve();\n        }, function (data) {\n            self.$log.warn('[FastBill] login failed', data);\n            self.$rootScope.$broadcast('not-authenticated');\n            deferred.reject();\n        });\n\n        return deferred.promise;\n    };\n\n    FastBill.prototype.getCustomers = function () {\n        this.ensureAuthenticated();\n        return this.client.api.customer.get().then(function (data) {\n            var customers = [];\n\n            data.forEach(function (c) {\n                customers.push(new Customer(c));\n            });\n\n            return customers;\n        });\n    };\n\n    FastBill.prototype.getCustomer = function (id) {\n        this.ensureAuthenticated();\n        return this.client.api.customer.getById(id).then(function (data) {\n            if (data && data.length) {\n                return new Customer(data[0]);\n            }\n\n            return null;\n        });\n    };\n\n    FastBill.prototype.isAuthenticated = function () {\n        if (this.deferred) {\n            return this.deferred.promise;\n        }\n\n        var deferred = this.$q.defer();\n\n        deferred.resolve(this.authenticated);\n\n        return deferred.promise;\n    };\n\n    FastBill.prototype.getInvoices = function (customerId) {\n        this.ensureAuthenticated();\n        this.$log.debug('[FastBill] getInvoices', customerId);\n        var Invoice = require('../model/invoice'),\n            invoicesHandler = function (data) {\n                var invoices = [];\n\n                data.forEach(function (i) {\n                    invoices.push(new Invoice(i));\n                });\n\n                return invoices;\n            };\n\n        if (customerId) {\n            return this.client.api.invoice.getByCustomerId(customerId).then(invoicesHandler);\n        } else {\n            return this.client.api.invoice.get().then(invoicesHandler);\n        }\n    };\n\n    FastBill.prototype.getProjects = function (customerId) {\n        this.ensureAuthenticated();\n        var Project = require('../model/project'),\n            projectsHandler = function (data) {\n                var projects = [];\n\n                data.forEach(function (p) {\n                    projects.push(new Project(p));\n                });\n\n                return projects;\n            };\n\n        if (customerId) {\n            return this.client.api.project.getByCustomerId(customerId).then(projectsHandler);\n        }\n\n        return this.client.api.project.get().then(projectsHandler);\n    };\n\n    FastBill.prototype.logout = function () {\n        this.authenticated = false;\n        this.credentials = null;\n        this.clearState();\n    };\n\n    module.exports = ['$q', '$rootScope', '$log', function ($q, $rootScope, $log) {\n        return new FastBill($q, $rootScope, $log);\n    }];\n}());\n"],"sourceRoot":"/source/"}