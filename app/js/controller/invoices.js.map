{"version":3,"names":[],"mappings":"","sources":["controller/invoices.js"],"sourcesContent":["import angular from 'angular';\nimport Bridge from '../lib/bridge';\n\nexport default ['$scope', '$log', 'FastBill', '$filter', '$state', function ($scope, $log, FastBill, $filter, $state) {\n    var bridge = new Bridge();\n\n    function invoicesLoaded (invoices) {\n        $scope.$apply(function () {\n            $scope.invoices = invoices;\n        });\n    }\n    if ($state.params.customerId) {\n        FastBill.getInvoices($state.params.customerId).then(invoicesLoaded);\n    } else {\n        FastBill.getInvoices(null).then(invoicesLoaded);\n    }\n    $scope.showHeader = !$state.params.customerId;\n\n    // pagination\n    $scope.model = {\n        currentPage: 1,\n        invoicesPerPage: 10,\n        startInvoice: 0,\n        endInvoice: 10\n    };\n    $scope.invoicesPerPageOptions = [1, 5, 10, 20, 25, 50];\n\n    $scope.$watch('[model.currentPage,model.invoicesPerPage]', function (values) {\n        $log.debug('[InvoicesCtrl] values', values);\n        var currentPage = parseInt(values[0], 10),\n            invoicesPerPage = parseInt(values[1], 10),\n            i = Math.max(0, currentPage - 1);\n\n        $scope.model.startInvoice = i * invoicesPerPage;\n        $scope.model.endInvoice = $scope.model.startInvoice + invoicesPerPage;\n    });\n\n    $scope.downloadInvoice = function (invoice) {\n        var fileName = $filter('translate')('INVOICE.FILE_NAME') + invoice.number + '.pdf';\n\n        bridge.downloadFile(fileName, invoice.url, $filter('translate')('INVOICE.SAVE_FILE'));\n    };\n\n    $scope.$watch('invoices', function (invoices) {\n        if (!invoices) {\n            return;\n        }\n        $scope.turnOver = 0;\n\n        invoices.forEach(function (invoice) {\n            $scope.turnOver += invoice.total;\n        });\n    });\n}];"],"file":"controller/invoices.js","sourceRoot":"/source/"}